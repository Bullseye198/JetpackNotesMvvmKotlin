// Generated by Dagger (https://dagger.dev).
package com.wiseassblog.jetpacknotesmvvmkotlin.core.injection.module;

import android.content.Context;
import com.example.data.RoomNoteDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideRoomNoteDatabaseFactory implements Factory<RoomNoteDatabase> {
  private final Provider<Context> applicationContextProvider;

  public ApplicationModule_ProvideRoomNoteDatabaseFactory(
      Provider<Context> applicationContextProvider) {
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public RoomNoteDatabase get() {
    return provideRoomNoteDatabase(applicationContextProvider.get());
  }

  public static ApplicationModule_ProvideRoomNoteDatabaseFactory create(
      Provider<Context> applicationContextProvider) {
    return new ApplicationModule_ProvideRoomNoteDatabaseFactory(applicationContextProvider);
  }

  public static RoomNoteDatabase provideRoomNoteDatabase(Context applicationContext) {
    return Preconditions.checkNotNull(ApplicationModule.INSTANCE.provideRoomNoteDatabase(applicationContext), "Cannot return null from a non-@Nullable @Provides method");
  }
}
