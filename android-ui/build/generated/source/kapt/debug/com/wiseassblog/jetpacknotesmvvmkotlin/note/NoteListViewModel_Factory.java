// Generated by Dagger (https://dagger.dev).
package com.wiseassblog.jetpacknotesmvvmkotlin.note;

import com.example.domain.AppCoroutineDispatchers;
import com.example.domain.usecases.OnDeleteAllNotesUseCase;
import com.example.domain.usecases.OnGetNotesUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteListViewModel_Factory implements Factory<NoteListViewModel> {
  private final Provider<OnGetNotesUseCase> onGetNotesUseCaseProvider;

  private final Provider<OnDeleteAllNotesUseCase> onDeleteAllNotesUseCaseProvider;

  private final Provider<AppCoroutineDispatchers> uiContextProvider;

  public NoteListViewModel_Factory(Provider<OnGetNotesUseCase> onGetNotesUseCaseProvider,
      Provider<OnDeleteAllNotesUseCase> onDeleteAllNotesUseCaseProvider,
      Provider<AppCoroutineDispatchers> uiContextProvider) {
    this.onGetNotesUseCaseProvider = onGetNotesUseCaseProvider;
    this.onDeleteAllNotesUseCaseProvider = onDeleteAllNotesUseCaseProvider;
    this.uiContextProvider = uiContextProvider;
  }

  @Override
  public NoteListViewModel get() {
    return newInstance(onGetNotesUseCaseProvider.get(), onDeleteAllNotesUseCaseProvider.get(), uiContextProvider.get());
  }

  public static NoteListViewModel_Factory create(
      Provider<OnGetNotesUseCase> onGetNotesUseCaseProvider,
      Provider<OnDeleteAllNotesUseCase> onDeleteAllNotesUseCaseProvider,
      Provider<AppCoroutineDispatchers> uiContextProvider) {
    return new NoteListViewModel_Factory(onGetNotesUseCaseProvider, onDeleteAllNotesUseCaseProvider, uiContextProvider);
  }

  public static NoteListViewModel newInstance(OnGetNotesUseCase onGetNotesUseCase,
      OnDeleteAllNotesUseCase onDeleteAllNotesUseCase, AppCoroutineDispatchers uiContext) {
    return new NoteListViewModel(onGetNotesUseCase, onDeleteAllNotesUseCase, uiContext);
  }
}
