// Generated by Dagger (https://dagger.dev).
package com.wiseassblog.jetpacknotesmvvmkotlin.note;

import com.example.domain.AppCoroutineDispatchers;
import com.example.domain.note.INoteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteListViewModel_Factory implements Factory<NoteListViewModel> {
  private final Provider<INoteRepository> noteRepoProvider;

  private final Provider<AppCoroutineDispatchers> uiContextProvider;

  public NoteListViewModel_Factory(Provider<INoteRepository> noteRepoProvider,
      Provider<AppCoroutineDispatchers> uiContextProvider) {
    this.noteRepoProvider = noteRepoProvider;
    this.uiContextProvider = uiContextProvider;
  }

  @Override
  public NoteListViewModel get() {
    return newInstance(noteRepoProvider.get(), uiContextProvider.get());
  }

  public static NoteListViewModel_Factory create(Provider<INoteRepository> noteRepoProvider,
      Provider<AppCoroutineDispatchers> uiContextProvider) {
    return new NoteListViewModel_Factory(noteRepoProvider, uiContextProvider);
  }

  public static NoteListViewModel newInstance(INoteRepository noteRepo,
      AppCoroutineDispatchers uiContext) {
    return new NoteListViewModel(noteRepo, uiContext);
  }
}
