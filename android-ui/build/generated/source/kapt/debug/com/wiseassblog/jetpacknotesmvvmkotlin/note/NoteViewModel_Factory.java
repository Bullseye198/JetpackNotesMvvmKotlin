// Generated by Dagger (https://dagger.dev).
package com.wiseassblog.jetpacknotesmvvmkotlin.note;

import com.example.domain.AppCoroutineDispatchers;
import com.example.domain.note.INoteRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NoteViewModel_Factory implements Factory<NoteViewModel> {
  private final Provider<INoteRepository> noteRepoProvider;

  private final Provider<AppCoroutineDispatchers> coroutineDispatchersProvider;

  public NoteViewModel_Factory(Provider<INoteRepository> noteRepoProvider,
      Provider<AppCoroutineDispatchers> coroutineDispatchersProvider) {
    this.noteRepoProvider = noteRepoProvider;
    this.coroutineDispatchersProvider = coroutineDispatchersProvider;
  }

  @Override
  public NoteViewModel get() {
    return newInstance(noteRepoProvider.get(), coroutineDispatchersProvider.get());
  }

  public static NoteViewModel_Factory create(Provider<INoteRepository> noteRepoProvider,
      Provider<AppCoroutineDispatchers> coroutineDispatchersProvider) {
    return new NoteViewModel_Factory(noteRepoProvider, coroutineDispatchersProvider);
  }

  public static NoteViewModel newInstance(INoteRepository noteRepo,
      AppCoroutineDispatchers coroutineDispatchers) {
    return new NoteViewModel(noteRepo, coroutineDispatchers);
  }
}
