// Generated by Dagger (https://dagger.dev).
package com.wiseassblog.jetpacknotesmvvmkotlin.core.injection.module;

import com.wiseassblog.jetpacknotesmvvmkotlin.model.NoteDao;
import com.wiseassblog.jetpacknotesmvvmkotlin.model.RoomNoteDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaoModule_ProvideNoteDaoFactory implements Factory<NoteDao> {
  private final Provider<RoomNoteDatabase> roomNoteDatabaseProvider;

  public DaoModule_ProvideNoteDaoFactory(Provider<RoomNoteDatabase> roomNoteDatabaseProvider) {
    this.roomNoteDatabaseProvider = roomNoteDatabaseProvider;
  }

  @Override
  public NoteDao get() {
    return provideNoteDao(roomNoteDatabaseProvider.get());
  }

  public static DaoModule_ProvideNoteDaoFactory create(
      Provider<RoomNoteDatabase> roomNoteDatabaseProvider) {
    return new DaoModule_ProvideNoteDaoFactory(roomNoteDatabaseProvider);
  }

  public static NoteDao provideNoteDao(RoomNoteDatabase roomNoteDatabase) {
    return Preconditions.checkNotNull(DaoModule.INSTANCE.provideNoteDao(roomNoteDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
